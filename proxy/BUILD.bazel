load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "go_default_library",
    srcs = ["main.go"],
    importpath = "github.com/enfabrica/enkit/proxy",
    visibility = ["//visibility:private"],
    deps = [
        ":credentials",
        "//lib/client:go_default_library",
        "//lib/kflags/kcobra:go_default_library",
        "//lib/srand:go_default_library",
        "//proxy/enproxy:go_default_library",
        "//proxy/httpp:go_default_library",
        "@com_github_spf13_cobra//:go_default_library",
    ],
)

go_binary(
    name = "enproxy",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)

load("@io_bazel_rules_go//extras:embed_data.bzl", "go_embed_data")

# Generate a .go file containing all the credentials supplied during the build.
go_embed_data(
    name = "embedded-credentials",
    srcs = glob(["credentials/**/*.flag*"]),
    flatten = True,
    package = "credentials",
    visibility = ["//visibility:public"],
)

go_library(
    name = "credentials",
    srcs = [":embedded-credentials"],
    importpath = "github.com/enfabrica/enkit/proxy/credentials",
    visibility = ["//visibility:public"],
)

load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_push")

container_image(
    name = "enproxy-base",
    base = "@go_image_base//image",
    env = {
        "HOME": "/cache",
    },

    # enproxy needs to cache certificates in a directory so they survive
    # across restarts.
    #
    # This cache is extremely important: "let's encrypt" limits the number
    # of certificates it issues for a domain in a given week. If we end
    # up in a restart loop of the proxy without the cache, we'd quickly
    # exhaust this limit, and won't be able to get new certificates until
    # the rate limit grants more quota.
    volumes = [
        "/cache",
        "/config",
    ],
)

go_image(
    name = "enproxy-image",
    base = ":enproxy-base",
    binary = ":enproxy",
    visibility = ["//visibility:private"],
)

# To release a new version of enproxy, run:
#   bazelisk run :upload-enproxy-image
#
# WARNING: before doing so, make sure you have set all the desired
# defaults as per instructions in the credentials/ directory.
container_push(
    name = "upload-enproxy-image",
    format = "Docker",
    image = ":enproxy-image",
    registry = "gcr.io",
    repository = "devops-284019/infra/enproxy",
    tag = "latest",
    visibility = ["//visibility:public"],
)
