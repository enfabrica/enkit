load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_push")

go_library(
    name = "go_default_library",
    srcs = [
        "bigquery_metrics.go",
        "main.go",
        "service.go",
        "test_result.go",
        "xml_result.go",
    ],
    importpath = "github.com/enfabrica/enkit/bestie/server",
    visibility = ["//visibility:private"],
    deps = [
        "//bestie/proto:go_default_library",
        "//lib/kbuildbarn:go_default_library",
        "//lib/multierror:go_default_library",
        "//lib/server:go_default_library",
        "//third_party/bazel/src/main/java/com/google/devtools/build/lib/buildeventstream/proto:build_event_stream_go_proto",
        "@com_github_golang_glog//:go_default_library",
        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
        "@com_github_prometheus_client_golang//prometheus:go_default_library",
        "@com_github_prometheus_client_golang//prometheus/promauto:go_default_library",
        "@com_github_prometheus_client_golang//prometheus/promhttp:go_default_library",
        "@com_github_xenking_zipstream//:go_default_library",
        "@com_google_cloud_go_bigquery//:go_default_library",
        "@go_googleapis//google/devtools/build/v1:build_go_proto",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_protobuf//encoding/prototext:go_default_library",
        "@org_golang_google_protobuf//proto:go_default_library",
        "@org_golang_google_protobuf//types/known/emptypb:go_default_library",
    ],
)

go_binary(
    name = "bestie",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)

pkg_tar(
    name = "bestie_tar",
    srcs = [":bestie"],
    package_dir = "/enfabrica/bin",
)

container_image(
    name = "bestie_image",
    base = "@golang_base//image",
    cmd = [
        "/enfabrica/bin/bestie",
    ],
    tars = [
        ":bestie_tar",
    ],
)

container_push(
    name = "bestie_image_push",
    format = "Docker",
    image = ":bestie_image",
    registry = "gcr.io",
    repository = "devops-284019/infra/bestie",
    # TODO: Change this tag to "live"
    tag = "testing",
)
