load("@protobuf//bazel:cc_proto_library.bzl", "cc_proto_library")
load("@protobuf//bazel:py_proto_library.bzl", "py_proto_library")
load("@rules_go//go:def.bzl", "go_library")
load("@rules_go//proto:def.bzl", "go_proto_library")
load("@rules_proto//proto:defs.bzl", "proto_library")

# TODO: Make these definitions compatible with what gazelle wants to emit.

# gazelle:ignore

proto_library(
    name = "test_metrics_proto",
    srcs = ["test_metrics.proto"],
    visibility = ["//visibility:public"],
)

cc_proto_library(
    name = "bestie_cc_proto",
    visibility = ["//visibility:public"],
    deps = [":test_metrics_proto"],
)

go_proto_library(
    name = "bestie_go_proto",
    importpath = "github.com/enfabrica/enkit/bestie/proto",
    protos = [
        ":test_metrics_proto",
    ],
    visibility = ["//visibility:public"],
)

go_library(
    name = "go_default_library",
    embed = [
        ":bestie_go_proto",
    ],
    importpath = "github.com/enfabrica/enkit/bestie/proto",
    visibility = ["//visibility:public"],
)

py_proto_library(
    name = "bestie_py_proto",
    visibility = ["//visibility:public"],
    deps = [":test_metrics_proto"],
)
