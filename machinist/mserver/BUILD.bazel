load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("@io_bazel_rules_go//extras:embed_data.bzl", "go_embed_data")

go_library(
    name = "go_default_library",
    srcs = [
        "command.go",
        "controller.go",
        "factory.go",
        "flags.go",
        "models.go",
        "mserver.go",
    ],
    importpath = "github.com/enfabrica/enkit/machinist/mserver",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/client:go_default_library",
        "//lib/knetwork/kdns:go_default_library",
        "//lib/logger:go_default_library",
        "//machinist/config:go_default_library",
        "//machinist/rpc:machinist-go",
        "@com_github_miekg_dns//:go_default_library",
        "@com_github_spf13_cobra//:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
    ],
)

# Generate a .go file containing all the flags supplied during the build.
go_embed_data(
    name = "embedded-flags",
    srcs = glob(["flags/**/*.flag*"]),
    flatten = True,
    package = "flags",
    visibility = ["//visibility:public"],
)

go_library(
    name = "flags",
    srcs = [":embedded-flags"],
    importpath = "github.com/enfabrica/enkit/machinist/server/flags",
    visibility = ["//visibility:public"],
)

# Generate a .go file containing all the web assets.
go_embed_data(
    name = "embedded-assets",
    srcs = glob(["assets/**"]),
    flatten = True,
    package = "assets",
    visibility = ["//visibility:public"],
)

go_library(
    name = "assets",
    srcs = [":embedded-assets"],
    importpath = "github.com/enfabrica/enkit/machinist/server/assets",
    visibility = ["//visibility:public"],
)
