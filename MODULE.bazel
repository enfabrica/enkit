module(
    name = "enkit",
    version = "0.0.0",
    compatibility_level = 1,
)

bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "aspect_bazel_lib", version = "2.17.1")
bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "rules_multirun", version = "0.12.0")
bazel_dep(name = "bazel_bats", version = "enf-0.35.0")
bazel_dep(name = "buildifier_prebuilt", version = "8.0.3")

bazel_dep(
    name = "hermetic_cc_toolchain",
    version = "4.0.0",
    dev_dependency = True,
)

toolchains = use_extension(
    "@hermetic_cc_toolchain//toolchain:ext.bzl",
    "toolchains",
    dev_dependency = True,
)
use_repo(toolchains, "zig_sdk")

register_toolchains(
    "@zig_sdk//toolchain:windows_amd64",
    "@zig_sdk//toolchain:windows_arm64",
    "@zig_sdk//toolchain:darwin_amd64",
    "@zig_sdk//toolchain:darwin_arm64",
    "@zig_sdk//toolchain:linux_arm64_musl",
    dev_dependency = True,
)

bazel_dep(name = "rules_pkg", version = "1.1.0")
bazel_dep(name = "rules_proto", version = "7.1.0")
bazel_dep(name = "grpc", version = "1.72.0")
bazel_dep(name = "googletest", version = "1.17.0")
bazel_dep(name = "google_benchmark", version = "1.9.2")
bazel_dep(name = "rules_jsonnet", version = "0.6.0")
bazel_dep(name = "rules_oci", version = "2.2.6")
bazel_dep(name = "xds", version = "0.0.0-20240423-555b57e")
bazel_dep(name = "cel-spec", version = "enf-0.23.0")
bazel_dep(name = "protoc-gen-validate", version = "1.2.1.bcr.1")
bazel_dep(name = "rules_proto_grpc_go", version = "5.1.0")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "container_golang_base",
    digest = "sha256:a4eefd667af74c5a1c5efe895a42f7748808e7f5cbc284e0e5f1517b79721ccb",
    image = "us-docker.pkg.dev/enfabrica-container-images/third-party-prod/distroless/base/golang",
)
oci.pull(
    name = "golang_base",
    digest = "sha256:a4eefd667af74c5a1c5efe895a42f7748808e7f5cbc284e0e5f1517b79721ccb",
    image = "us-docker.pkg.dev/enfabrica-container-images/third-party-prod/distroless/base/golang",
)
use_repo(oci, "container_golang_base", "golang_base")

bazel_dep(name = "rules_python", version = "enf-1.4.1")

python = use_extension(
    "@rules_python//python/extensions:python.bzl",
    "python",
    dev_dependency = True,
)
python.toolchain(
    # Disable root warning for .pyc cache misses since CI runs as root.
    # See https://github.com/bazelbuild/rules_python/pull/713
    ignore_root_user_error = True,
    is_default = True,
    python_version = "3.12",
)

pip = use_extension(
    "@rules_python//python/extensions:pip.bzl",
    "pip",
)
pip.parse(
    extra_pip_args = [
        # Needed for latest pytorch+CUDA install
        "--find-links=https://download.pytorch.org/whl/torch_stable.html",
        # Fixes OOMkill during torch install
        # See https://github.com/pytorch/pytorch/issues/1022
        "--no-cache-dir",
    ],
    hub_name = "enkit_pip_deps",
    python_version = "3.12",
    requirements_lock = "//:requirements.txt",
)
use_repo(pip, "enkit_pip_deps")

bazel_dep(name = "aspect_rules_py", version = "enf-1.5.1")
bazel_dep(name = "protobuf", version = "enf-31.0")
bazel_dep(name = "googleapis-cc", version = "1.0.0")
bazel_dep(name = "googleapis", version = "0.0.0-20241220-5e258e33.bcr.1")
bazel_dep(name = "jsonnet_go", version = "0.21.0")
bazel_dep(name = "rules_go", version = "0.54.1")
bazel_dep(name = "gazelle", version = "enf-0.43.0")

go_sdk = use_extension(
    "@rules_go//go:extensions.bzl",
    "go_sdk",
    dev_dependency = True,
)
go_sdk.download(version = "1.24.0")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "com_github_bazelbuild_buildtools",
    "com_github_bazelbuild_remote_apis",
    "com_github_buildbarn_bb_remote_execution",
    "com_github_buildbarn_bb_storage",
    "com_github_cheggaaa_pb_v3",
    "com_github_coreos_go_oidc",
    "com_github_cybozu_go_aptutil",
    "com_github_docker_docker",
    "com_github_dustin_go_humanize",
    "com_github_evanphx_go_hclog_slog",
    "com_github_fatih_color",
    "com_github_go_git_go_git_v5",
    "com_github_golang_glog",
    "com_github_golang_jwt_jwt_v5",
    "com_github_golang_protobuf",
    "com_github_google_go_cmp",
    "com_github_google_go_github",
    "com_github_google_uuid",
    "com_github_googlecloudplatform_cloud_build_notifiers",
    "com_github_gorilla_websocket",
    "com_github_hashicorp_go_hclog",
    "com_github_hashicorp_nomad",
    "com_github_improbable_eng_grpc_web",
    "com_github_itchyny_gojq",
    "com_github_jackc_pgx_v5",
    "com_github_jackpal_gateway",
    "com_github_josephburnett_jd",
    "com_github_kataras_muxie",
    "com_github_kirsle_configdir",
    "com_github_masterminds_sprig_v3",
    "com_github_microsoft_go_winio",
    "com_github_miekg_dns",
    "com_github_mitchellh_go_homedir",
    "com_github_mitchellh_mapstructure",
    "com_github_pelletier_go_toml",
    "com_github_pkg_browser",
    "com_github_prashantv_gostub",
    "com_github_prometheus_client_golang",
    "com_github_psanford_memfs",
    "com_github_rs_cors",
    "com_github_sirupsen_logrus",
    "com_github_soheilhy_cmux",
    "com_github_spf13_cobra",
    "com_github_spf13_pflag",
    "com_github_stretchr_testify",
    "com_github_tchap_zapext",
    "com_github_ulikunitz_xz",
    "com_github_valyala_bytebufferpool",
    "com_github_valyala_quicktemplate",
    "com_github_xenking_zipstream",
    "com_github_xor_gate_ar",
    "com_google_cloud_go_bigquery",
    "com_google_cloud_go_cloudbuild",
    "com_google_cloud_go_datastore",
    "com_google_cloud_go_pubsub",
    "com_google_cloud_go_storage",
    "in_gopkg_gomail_v2",
    "in_gopkg_yaml_v2",
    "in_gopkg_yaml_v3",
    "org_golang_google_api",
    "org_golang_google_genproto",
    "org_golang_google_genproto_googleapis_bytestream",
    "org_golang_google_grpc",
    "org_golang_google_protobuf",
    "org_golang_x_crypto",
    "org_golang_x_exp",
    "org_golang_x_net",
    "org_golang_x_oauth2",
    "org_golang_x_term",
    "org_uber_go_goleak",
    "org_uber_go_zap",
)
go_deps.config(
    check_direct_dependencies = "off",
)

inject_repo(
    go_deps,
    bazel_remote_apis = "com_github_bazelbuild_remote_apis",
    dev_cel_expr = "cel-spec",
    googleapis = "googleapis",
    grpc = "grpc",
    jsonnet_go = "jsonnet_go",
    protobuf = "protobuf",
    rules_go = "rules_go",
    xds = "xds",
)

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "dive_x86_64",
    build_file_content = """\
filegroup(
    name = "dive_x86_64",
    srcs = ["dive"],
    visibility = ["//visibility:public"],
)
""",
    sha256 = "20a7966523a0905f950c4fbf26471734420d6788cfffcd4a8c4bc972fded3e96",
    url = "https://github.com/wagoodman/dive/releases/download/v0.12.0/dive_0.12.0_linux_amd64.tar.gz",
)
