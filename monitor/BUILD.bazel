load("@rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("//bazel/utils/container:container.bzl", "container_image", "container_push")

go_library(
    name = "monitor_lib",
    srcs = ["main.go"],
    importpath = "github.com/enfabrica/enkit/monitor",
    visibility = ["//visibility:private"],
    deps = [
        "//lib/client",
        "//lib/config/marshal",
        "//lib/kflags/kcobra",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/promauto",
        "@com_github_prometheus_client_golang//prometheus/promhttp",
        "@com_github_spf13_cobra//:cobra",
    ],
)

go_binary(
    name = "monitor",
    data = [":probes.toml"],
    embed = [":monitor_lib"],
    visibility = ["//visibility:public"],
)

pkg_tar(
    name = "tar",
    srcs = [
        "probes.toml",
        ":monitor",
    ],
    package_dir = "/enfabrica/bin",
)

container_image(
    name = "image",
    base = "@container_golang_base",
    cmd = ["/enfabrica/bin/probes.toml"],
    entrypoint = ["/enfabrica/bin/monitor"],
    tars = [":tar"],
)

container_push(
    name = "image_push",
    image = ":image",
    image_path = "monitor",
    namespace = "infra",
    remote_tags = ["latest"],
)
