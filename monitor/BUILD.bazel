load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "go_default_library",
    srcs = ["main.go"],
    importpath = "github.com/enfabrica/enkit/monitor",
    visibility = ["//visibility:private"],
    deps = [
        "//lib/client:go_default_library",
        "//lib/config/marshal:go_default_library",
        "//lib/kflags/kcobra:go_default_library",
        "@com_github_prometheus_client_golang//prometheus:go_default_library",
        "@com_github_prometheus_client_golang//prometheus/promauto:go_default_library",
        "@com_github_prometheus_client_golang//prometheus/promhttp:go_default_library",
        "@com_github_spf13_cobra//:go_default_library",
    ],
)

go_binary(
    name = "monitor",
    data = [":probes.toml"],
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)

load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_push")

go_image(
    name = "monitor-image",
    base = "@golang_base//image",
    binary = ":monitor",
    data = [
      ":probes.toml",
    ],
    args = ["$(location :probes.toml)"],
    visibility = ["//visibility:public"],
)

container_push(
    name = "upload-monitor-image",
    format = "Docker",
    image = ":monitor-image",
    registry = "gcr.io",
    repository = "devops-284019/infra/monitor",
    tag = "monitor-server",
    visibility = ["//visibility:public"],
)
