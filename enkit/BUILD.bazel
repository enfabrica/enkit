load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "go_default_library",
    srcs = ["main.go"],
    importpath = "github.com/enfabrica/enkit/enkit",
    visibility = ["//visibility:private"],
    deps = [
        "//astore/client/commands:go_default_library",
        "//enkit/outputs:go_default_library",
        "//lib/bazel/commands:go_default_library",
        "//lib/client:go_default_library",
        "//lib/client/commands:go_default_library",
        "//lib/kflags/kcobra:go_default_library",
        "//lib/srand:go_default_library",
        "//proxy/enfuse/fusecmd:go_default_library",
        "//proxy/ptunnel/commands:go_default_library",
        "@com_github_spf13_cobra//:go_default_library",
    ],
)

go_binary(
    name = "enkit",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)

go_binary(
    name = "enkit-linux-amd64",
    embed = [":go_default_library"],
    goarch = "amd64",
    goos = "linux",
    static = "on",
    visibility = ["//visibility:public"],
)

go_binary(
    name = "enkit-darwin-amd64",
    embed = [":go_default_library"],
    goarch = "amd64",
    goos = "darwin",
    static = "on",
    visibility = ["//visibility:public"],
)

go_binary(
    name = "enkit-win-amd64",
    embed = [":go_default_library"],
    goarch = "amd64",
    goos = "windows",
    static = "on",
    visibility = ["//visibility:public"],
)

load("//bazel/astore:defs.bzl", "astore_upload")

astore_upload(
    name = "deploy",
    file = "tools/enkit",
    targets = [
        ":enkit-linux-amd64",
        ":enkit-darwin-amd64",
        ":enkit-win-amd64",
    ],
)
