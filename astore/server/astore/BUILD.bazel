load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "astore",
    srcs = [
        "astore.go",
        "delete.go",
        "factory.go",
        "interface.go",
        "note.go",
        "publish.go",
        "retrieve.go",
    ],
    importpath = "github.com/enfabrica/enkit/astore/server/astore",
    visibility = ["//visibility:public"],
    deps = [
        "//astore/rpc/astore",
        "//lib/kflags",
        "//lib/logger",
        "//lib/oauth",
        "//lib/retry",
        "@com_google_cloud_go_datastore//:datastore",
        "@com_google_cloud_go_storage//:storage",
        "@org_golang_google_api//iterator",
        "@org_golang_google_api//option",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_x_oauth2//google",
    ],
)

go_test(
    name = "astore_test",
    srcs = [
        "astore_test.go",
        "retrieve_test.go",
        "util_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":astore"],
    local = True,
    deps = [
        "//astore/client/astore",
        "//astore/rpc/astore",
        "//lib/errdiff",
        "//lib/testutil",
        "@com_github_golang_protobuf//ptypes/wrappers",
        "@com_github_prashantv_gostub//:gostub",
        "@com_github_stretchr_testify//assert",
        "@com_google_cloud_go_datastore//:datastore",
        "@com_google_cloud_go_storage//:storage",
        "@org_golang_google_genproto//googleapis/datastore/v1:datastore",
    ],
)

alias(
    name = "go_default_library",
    actual = ":astore",
    visibility = ["//visibility:public"],
)
