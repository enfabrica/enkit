From 8537ac106731c3c46c4e2963ebfe90d459894395 Mon Sep 17 00:00:00 2001
From: Carlo Contavalli <carlo@enfabrica.net>
Date: Tue, 6 Jun 2023 23:46:13 +0000
Subject: [PATCH] absl/flags/parse.cc: provide a mechanism to let other parse
 unknown flags.

Problem:
If multiple flag parsing libraries are used (sigh) it's important
to have a mechanism so that 1) unknown flags are left where they are
in argv (not moved at the beginning, not stripped, ...), and 2) a
new argv with all known args stripped is returned.

This commit implements just that.
---
 absl/flags/internal/parse.h |  5 ++++-
 absl/flags/parse.cc         | 14 +++++++++++---
 2 files changed, 15 insertions(+), 4 deletions(-)

diff --git a/absl/flags/internal/parse.h b/absl/flags/internal/parse.h
index 0a7012fc..ee164727 100644
--- a/absl/flags/internal/parse.h
+++ b/absl/flags/internal/parse.h
@@ -35,7 +35,10 @@ namespace flags_internal {
 enum class ArgvListAction { kRemoveParsedArgs, kKeepParsedArgs };
 enum class UsageFlagsAction { kHandleUsage, kIgnoreUsage };
 enum class OnUndefinedFlag {
-  kIgnoreUndefined,
+  // Undefined flags are ignored, but considered parsed (for ArgvListAction).
+  kIgnoreUndefined,   
+  // Undefined flags are ignored, and considered not parsed (for ArgvListAction).
+  kKeepUndefined,
   kReportUndefined,
   kAbortIfUndefined
 };
diff --git a/absl/flags/parse.cc b/absl/flags/parse.cc
index fa953f55..5c21bb43 100644
--- a/absl/flags/parse.cc
+++ b/absl/flags/parse.cc
@@ -735,8 +735,10 @@ std::vector<char*> ParseCommandLineImpl(int argc, char* argv[],
     if (!absl::ConsumePrefix(&arg, "-") || arg.empty()) {
       ABSL_INTERNAL_CHECK(arg_from_argv,
                           "Flagfile cannot contain positional argument");
-
-      positional_args.push_back(argv[curr_list.FrontIndex()]);
+      if (on_undef_flag == OnUndefinedFlag::kKeepUndefined)
+        output_args.push_back(argv[curr_list.FrontIndex()]);
+      else
+        positional_args.push_back(argv[curr_list.FrontIndex()]);
       continue;
     }
 
@@ -776,10 +778,16 @@ std::vector<char*> ParseCommandLineImpl(int argc, char* argv[],
         continue;
       }
 
-      if (on_undef_flag != OnUndefinedFlag::kIgnoreUndefined) {
+      if (on_undef_flag != OnUndefinedFlag::kIgnoreUndefined &&
+          on_undef_flag != OnUndefinedFlag::kKeepUndefined) {
         undefined_flag_names.emplace_back(arg_from_argv,
                                           std::string(flag_name));
       }
+
+      if (on_undef_flag == OnUndefinedFlag::kKeepUndefined && 
+          arg_list_act != ArgvListAction::kKeepParsedArgs) {
+        output_args.push_back(argv[curr_list.FrontIndex()]);
+      }
       continue;
     }
 
-- 
2.37.1

