load("@rules_foreign_cc//foreign_cc:defs.bzl", "cmake")

filegroup(
    name = "libz_all",
    srcs = glob(["**"]),
    visibility = ["//visibility:public"],
)

filegroup(
    name = "libz_headers",
    srcs = glob(["**/*.h"]),
    visibility = ["//visibility:public"],
)


# zlib
# The name of this rule is libz to avoid conflicts with the system `@zlib//:zlib`.
# We cannot use @zlib//:zlib because the libraries that are generated are named
# libzlib.(a|so), which is incompatible with other foreign_cc builds.
cmake(
    name = "libz", 
    env = {},
    cache_entries = {
        "CMAKE_C_FLAGS": "${CMAKE_C_FLAGS:-} -fPIC",
        "CMAKE_CXX_FLAGS": "${CMAKE_CXX_FLAGS:-} -fPIC",
    },
    lib_source = ":libz_all",
    generate_args = [],
    targets = ["", "install"],
    out_static_libs = ["libz.a"],
    out_shared_libs = ["libz.so"],
    includes = ["."],
    visibility = ["//visibility:public"],
)
