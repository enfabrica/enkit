load("@rules_proto//proto:defs.bzl", "proto_library")
load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
load("@com_google_protobuf//:protobuf.bzl", "py_proto_library")
load("@enkit_pip_deps//:requirements.bzl", "requirement")
load("@io_bazel_rules_jsonnet//jsonnet:jsonnet.bzl", "jsonnet_library", "jsonnet_to_json")

py_binary(
    name = "muk",
    srcs = ["main.py"],
    main = "main.py",
    visibility = ["//visibility:public"],
    deps = [
        ":muk_lib",
        ":muk_py_proto",
        requirement("absl-py"),
        requirement("docker"),
    ],
)

py_proto_library(
    name = "muk_py_proto",
    srcs = ["muk.proto"],
)

py_library(
    name = "muk_lib",
    srcs = ["muk.py"],
    deps = [
        ":muk_py_proto",
        "//bazel/utils/container:exceptions_lib",
        requirement("docker"),
    ],
)

py_test(
    name = "muk_test",
    srcs = ["muk_test.py"],
    data = glob(["testdata/*"]) + [
        ":base_dev_config",
    ],
    deps = [
        ":muk_lib",
        "@rules_python//python/runfiles",
        requirement("absl-py"),
    ],
)

jsonnet_to_json(
    name = "base_dev_config",
    src = "base_dev.jsonnet",
    outs = ["base_dev.json"],
    deps = [
        ":base",
    ],
)

jsonnet_library(
    name = "base",
    srcs = ["base.libsonnet"],
    deps = [
        ":packages",
        ":util",
    ],
)

jsonnet_library(
    name = "packages",
    srcs = ["packages.libsonnet"],
)

jsonnet_library(
    name = "util",
    srcs = [":util.libsonnet"],
)

proto_library(
    name = "infra_dev_container_muk_proto",
    srcs = ["muk.proto"],
    visibility = ["//visibility:public"],
)

go_proto_library(
    name = "infra_dev_container_muk_go_proto",
    importpath = "github.com/enfabrica/enkit/bazel/utils/container/muk",
    proto = ":infra_dev_container_muk_proto",
    visibility = ["//visibility:public"],
)

alias(
    name = "go_default_library",
    actual = ":muk",
    visibility = ["//visibility:public"],
)
