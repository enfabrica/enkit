# The directory internal/bazel/utils/container must exist in the internal
# repo so that dynamically generated targets from the enkit repo can be
# referenced locally within the internal repo
load("@enkit_pip_deps//:requirements.bzl", "requirement")

exports_files(["container_pusher.py"])

genrule(
    name = "stable_status",
    outs = ["stable-status.txt"],
    cmd = "cp bazel-out/stable-status.txt $@",
    stamp = 1,
)

genrule(
    name = "volatile_status",
    outs = ["volatile-status.txt"],
    cmd = "cp bazel-out/volatile-status.txt $@",
    stamp = 1,
)

py_library(
    name = "stamp",
    srcs = ["stamp.py"],
    data = [
        ":stable_status",
        ":volatile_status",
    ],
    deps = [
        "@rules_python//python/runfiles",
    ],
)

py_library(
    name = "exceptions_lib",
    srcs = ["exceptions.py"],
    visibility = ["//visibility:public"],
)

py_binary(
    name = "container_stamper",
    srcs = ["container_stamper.py"],
    # Allow the internal repo to access this target
    visibility = [
        "//visibility:public",
    ],
    deps = [
        ":stamp",
        requirement("absl-py"),
    ],
)

py_binary(
    name = "container_pusher",
    srcs = ["@enkit//bazel/utils/container:container_pusher.py"],
    main = "@enkit//bazel/utils/container:container_pusher.py",
    visibility = [
        "//visibility:public",
    ],
    deps = [
        "@enkit//bazel/utils/container:exceptions_lib",
        "@rules_python//python/runfiles",
        requirement("absl-py"),
        requirement("docker"),
    ],
)
