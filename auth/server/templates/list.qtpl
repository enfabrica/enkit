{% import (
	"github.com/enfabrica/enkit/astore/rpc/astore"
	"github.com/dustin/go-humanize"
	"time"
	"fmt"
) %}
{% code
type ListPage struct {
	// The title of the page.
	PageTitle string
	// The path being downloaded by the user.
	Path string
	// The base URL to redirect to.
	Base string

	// The response from the RPC server.
	List *astore.ListResponse
}
%}
{% code 
func (lp *ListPage) DownloadURL(art *astore.Artifact) string {
	return fmt.Sprintf("%s%s?u=%s", lp.Base, lp.Path, art.Uid)
}
%}
{% func (m *ListPage) Title() %}{%s m.PageTitle %}{% endfunc %}
{% func (m *ListPage) Body() %}
  {% for _, art := range m.List.Artifact %}
      <div class="mdl-cell mdl-cell--2-col"></div>

      <div class="mdl-card mdl-shadow--2dp mdl-cell mdl-cell--8-col">
          <div class="mdl-card__title mdl-grid--no-spacing mdl-card--expand">
	    <h2 class="mdl-card__title-text">{%s m.Path %} - {%s art.Architecture %}</h2>
          </div>
          <div class="mdl-card__supporting-text">
	    MD5: {%s fmt.Sprintf("%x", art.MD5) %}, Size: {%s humanize.Bytes(uint64(art.Size)) %}, Created: {%s time.Unix(0, art.Created).String() %}
          </div>
          <div class="mdl-card__actions mdl-card--border">
            <a class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect" href="{%s m.DownloadURL(art) %}">DOWNLOAD</a>
          </div>
      </div>

      <div class="mdl-cell mdl-cell--2-col"></div>
  {% endfor %}
{% endfunc %}
